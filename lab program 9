<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>DOM Manipulation — Live Exercise</title>
  <style>
    :root{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;line-height:1.4}
    body{max-width:900px;margin:32px auto;padding:16px}
    header{display:flex;gap:16px;align-items:center}
    .card{border:1px solid #b62020;padding:12px;border-radius:8px;margin-top:12px}
    button{padding:8px 12px;border-radius:6px;border:1px solid #bbb;background:#fff;cursor:pointer}
    .highlight{background:linear-gradient(90deg, rgba(255,230,150,0.6), rgba(255,255,255,0.0));}
    input[type=text]{padding:6px;border-radius:6px;border:1px solid #ccc}
    ul{padding-left:20px}
  </style>
</head>
<body>
  <header>
    <h1>DOM Manipulation — Live Exercise</h1>
    <small>Practice: create / update / remove elements & attributes</small>
  </header>


  <section class="card" id="textCard">
    <h2>Update text content</h2>
    <p id="intro">This text will be changed when you click the button below.</p>
    <button id="changeTextBtn">Change text</button>
  </section>

 
  <section class="card" id="inputCard">
    <h2>Use input to update DOM</h2>
    <label>
      New heading: <input type="text" id="headingInput" placeholder="Type a new heading" />
    </label>
    <button id="applyHeading">Apply</button>
    <h3 id="liveHeading">Original heading</h3>
  </section>

  <section class="card" id="listCard">
    <h2>Manage a list</h2>
    <input type="text" id="itemInput" placeholder="New todo item" />
    <button id="addItem">Add item</button>
    <button id="clearList">Clear list</button>
    <ul id="todoList">
      <li>Example item 1 <button class="remove">Remove</button></li>
      <li>Example item 2 <button class="remove">Remove</button></li>
    </ul>
  </section>

  
  <section class="card" id="createCard">
    <h2>Create element & attributes</h2>
    <button id="createImgBtn">Create image element</button>
    <div id="createdArea"></div>
  </section>

  
  <section class="card" id="toggleCard">
    <h2>Toggle classes & attributes</h2>
    <p id="togText">Click the toggle button to highlight this paragraph.</p>
    <button id="toggleBtn">Toggle highlight</button>
  </section>

  <script>
    
    const $ = (sel, ctx = document) => ctx.querySelector(sel);
    const $$ = (sel, ctx = document) => Array.from(ctx.querySelectorAll(sel));

   
    const changeTextBtn = $('#changeTextBtn');
    const intro = $('#intro');
    changeTextBtn.addEventListener('click', () => {
     
      intro.textContent = 'Text has been updated at ' + new Date().toLocaleTimeString();
    });

    
    $('#applyHeading').addEventListener('click', () => {
      const val = $('#headingInput').value.trim();
      const live = $('#liveHeading');
      if (!val) {
        live.textContent = 'Original heading';
        return;
      }
      
      live.textContent = val;
    });

    
    const todoList = $('#todoList');
    $('#addItem').addEventListener('click', () => {
      const text = $('#itemInput').value.trim();
      if (!text) return;
      const li = document.createElement('li');
      li.innerHTML = `${escapeHtml(text)} <button class="remove">Remove</button>`;
      todoList.appendChild(li);
      $('#itemInput').value = '';
    });

    
    $('#clearList').addEventListener('click', () => {
     
      while (todoList.firstChild) todoList.removeChild(todoList.firstChild);
    });

    todoList.addEventListener('click', (e) => {
      if (e.target && e.target.matches('button.remove')) {
        const li = e.target.closest('li');
        li.remove(); 
    });

    
    $('#createImgBtn').addEventListener('click', () => {
      const area = $('#createdArea');
      
      const existing = $('#createdArea img');
      if (existing) {
        existing.remove();
        return;
      }
      const img = document.createElement('img');
      img.setAttribute('alt', 'Cute placeholder');
      img.src = 'https://placekitten.com/320/180'; 
      img.width = 320;
      img.height = 180;
      img.style.display = 'block';
      img.style.marginTop = '8px';
      area.appendChild(img);
    });

  
    $('#toggleBtn').addEventListener('click', () => {
      $('#togText').classList.toggle('highlight');
    });

    
    function escapeHtml(str) {
      return str.replace(/[&<>"']/g, (c) => ({
        '&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'
      }[c]));
    }

    console.log('Document title (read):', document.title);

    
    document.documentElement.setAttribute('data-demo', 'dom-exercise');
    console.log('data-demo attr:', document.documentElement.getAttribute('data-demo'));

   00
    $('#itemInput').addEventListener('keydown', (e) => {
      if (e.key === 'Enter') {
        e.preventDefault();
        $('#addItem').click();
      }
    });

  </script>
</body>
</html>
